worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # HTTP server block (listen on port 80)
    # server {
    #     listen       80;
    #     server_name  localhost;

    #     # Redirect HTTP to HTTPS
    #     return 301 https://$host$request_uri;

    #     location / {
    #         root   /var/www/html;
    #         index  index.html index.htm;
    #     }

    #     error_page   500 502 503 504  /50x.html;
    #     location = /50x.html {
    #         root   html;
    #     }
    # }

    # HTTPS server block (listen on port 443)
    server {
        listen       443 ssl;
        server_name  localhost;

        ssl_certificate      /etc/ssl/certs/cert.pem;
        ssl_certificate_key  /etc/ssl/private/my_key.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers 'HIGH:!aNULL:!MD5';
        ssl_protocols TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers  on;

        # Security headers (optional)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer" always;
        add_header Content-Security-Policy "
            default-src 'self';
            script-src 'self' https://cdn.example.com 'unsafe-inline' 'unsafe-eval' https://*.gravatar.com;
            style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
            font-src 'self' https://fonts.gstatic.com data:;
            img-src 'self' data: *;
            connect-src 'self';
            object-src 'none';
            frame-src 'self' blob:;
            upgrade-insecure-requests;" always;
        add_header Permissions-Policy "geolocation=(self), microphone=()" always;
        add_header Cache-Control "no-store, no-cache, must-revalidate";

        # Main location block to serve static files and handle PHP
        location / {
            root   /var/www/html;
            index  index.html index.htm index.php;
            try_files $uri $uri/ /index.php?$args;
        }

        # PHP handling block
        location ~ \.php$ {
            root           /var/www/html;
            fastcgi_pass   wordpress:9000;  # This is assuming PHP-FPM is running in a container or service named php-fpm
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /var/www/html$fastcgi_script_name;
            
            fastcgi_param DB_NAME         $DB_NAME;
            fastcgi_param DB_USER         $DB_USER;
            fastcgi_param DB_PASSWORD     $DB_PASSWORD;
            fastcgi_param DB_HOST         $DB_HOST;
            fastcgi_param WP_REDIS_HOST   $WP_REDIS_HOST;
            fastcgi_param WP_REDIS_PORT   $WP_REDIS_PORT;
            
            include        fastcgi_params;
        }

        # Handle .php file errors
        error_page  404  /404.html;
        location = /404.html {
            root   /usr/share/nginx/html;
        }

        # Handle other errors
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
